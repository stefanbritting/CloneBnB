c
cc
c
dates[0]
dates
dates[0]
booked_range
carlendar.length
carlendar
c
all_reservations
all_reservation
carlendar.last[6]
carlendar.last[4]
carlendar.last[3]
carlendar.last
carlendar
c
booked_range
n
c
booked_range
booked_range === dates[1]
booked_range === dates[0]
dates[0]
dates
booked_range
n
c
carlendar.length
carlendar.legnth
carlendar
n
reservation_dates
all_reservations.last
all_reservations.length
all_reservations
all_reservation
carlendar.length
carlendar
n
carlendar
reservation_dates
c
reservation
reservation_dates
c
carlendar[1][1]
carlendar[2][1]
carlendar[3][1]
carlendar[4][1]
carlendar[0][1]
carlendar[0][0]
carlendar
c
carlendar[0][0].to_s
carlendar[0][0]
carlendar[0][9]
carlendar[0]
carlendar
n
r
all_reservations
c
reservation
c
Reservation.first.delete
Reservation.first
Reservation.all
Reservation.last.delete
Reservation.all.delete
Reservation.all
c
carlendar
Reservation.last(2)
Reservation.last
c
n
Reservation.last
reservation.check_availability
c
n
reservation.check_availability
reservation.check_availability.length
reservation.check_availability
reservation.check_availiability
Reservation.all
c
params
c
reservation.get_total_price
reservation.listing
reservation.listings
reservation
c
Reservation.all
c
reservation.user_id
reservation.user_id = 5
reservation.user_id
user.id
reservation.save
reservation
c
Reservation.all
Listing.all
carlendar
self
c
n
overlapping_reservation.from
reservation.from
reservation
overlapping_reservation
c
listing.save
reservation.save
user.save
exit
listing.save
user.save
user
User.all
exit
c
reservation
c
reservation
c
reservation
c
reservation
c
reservation
c
reservation
resesrvation
c
reservation
c
reservation.get_total_price
reservation
c
Reservation.find(1).update(to: "2016-07-13")
reservation
c
n
c
cc
c
n
host.email
c
n
@url
reservation
@host
@customer
c
payed?(reservation)
n
sum
c
sum
c
true
reservation.payments.amount
reservation.payments
c
reservation.payments
reservation
c
reservation.payments
reservation[0]
reservation
c
Payment.all
Payment.al
exit
payment
exit
n
result.transaction.customer_details
result.transaction
result.tranaction
result.customer_details
result.transaction.id
result.transaction.created_at
result.transaction.created-at
result.transaction
result.created_at
result
c
result
c
result
c
result.errors
result
c
result.errors.class
result.errors
result.errors.inspect
result.success?
result
result.errors
result.success?
result.errors.nil?
result.errors
result.success?
result
c
result.success?
result
c
n
result.success?
result
exit
s
result.errorsn
result.errors
result.errors.nil?
n
result
c
result.errors.display
result.errors.methods
result.errors.message
result.errors.messages
result.errors
result
exit
"#{@reservation.get_total_price}"
@reservation.get_total_price
@reservation
@reservatino
n
exit
@reservation = Reservation.find(params[:reservatioexitn_id])
n
params
parms
exit
params
c
exit
params
exit
params
exit
params[:checkout_form]
params
c
reservation.listing.price_per_night * duration
reservation.listing.price_per_night
